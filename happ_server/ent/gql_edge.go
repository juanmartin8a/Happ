// Code generated by ent, DO NOT EDIT.

package ent

import "context"

func (e *Event) Users(ctx context.Context) ([]*User, error) {
	result, err := e.Edges.UsersOrErr()
	if IsNotLoaded(err) {
		result, err = e.QueryUsers().All(ctx)
	}
	return result, err
}

func (u *User) Events(ctx context.Context) ([]*Event, error) {
	result, err := u.Edges.EventsOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryEvents().All(ctx)
	}
	return result, err
}

func (u *User) Friends(ctx context.Context) ([]*User, error) {
	result, err := u.Edges.FriendsOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryFriends().All(ctx)
	}
	return result, err
}

func (u *User) Followers(ctx context.Context) ([]*User, error) {
	result, err := u.Edges.FollowersOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryFollowers().All(ctx)
	}
	return result, err
}

func (u *User) Following(ctx context.Context) ([]*User, error) {
	result, err := u.Edges.FollowingOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryFollowing().All(ctx)
	}
	return result, err
}
